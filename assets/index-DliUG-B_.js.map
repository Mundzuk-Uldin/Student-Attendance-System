{"version":3,"file":"index-DliUG-B_.js","sources":["../../src/services/faceDetectionServiceCDN.js","../../src/services/databaseService.js","../../src/components/WebcamCapture.jsx","../../src/components/ErrorBoundary.jsx","../../src/components/StudentRegistrationForm.jsx","../../src/components/RegisterTab.jsx","../../src/components/AttendanceTab.jsx","../../src/components/DebugModels.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["import * as faceapi from 'face-api.js';\r\n\r\n// Use CDN for models instead of local files\r\nconst MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\r\n\r\n// Load the face detection models from CDN\r\nexport const loadModels = async () => {\r\n  try {\r\n    console.log('Starting to load face detection models from CDN...');\r\n    \r\n    console.log('Loading Tiny Face Detector model...');\r\n    await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\r\n    console.log('Tiny Face Detector model loaded');\r\n    \r\n    console.log('Loading Face Landmark model...');\r\n    await faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL);\r\n    console.log('Face Landmark model loaded');\r\n    \r\n    console.log('Loading Face Recognition model...');\r\n    await faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL);\r\n    console.log('Face Recognition model loaded');\r\n    \r\n    console.log('All face detection models loaded successfully from CDN');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error loading face detection models from CDN:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Detect faces in the video stream\r\nexport const detectFaces = async (videoElement) => {\r\n  if (!videoElement || videoElement.readyState !== 4) {\r\n    return [];\r\n  }\r\n\r\n  try {\r\n    const detectedFaces = await faceapi.detectAllFaces(\r\n      videoElement, \r\n      new faceapi.TinyFaceDetectorOptions()\r\n    ).withFaceLandmarks().withFaceDescriptors();\r\n    \r\n    return detectedFaces;\r\n  } catch (error) {\r\n    console.error('Error detecting faces:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Compare face descriptors to find matches\r\nexport const compareFaces = (faceDescriptor, registeredStudents, threshold = 0.6) => {\r\n  if (!faceDescriptor || registeredStudents.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    // Convert to Float32Array if it's a regular array\r\n    const descriptor = Array.isArray(faceDescriptor) \r\n      ? new Float32Array(faceDescriptor) \r\n      : faceDescriptor;\r\n\r\n    let minDistance = Infinity;\r\n    let matchedStudent = null;\r\n    \r\n    for (const student of registeredStudents) {\r\n      if (student.faceDescriptor) {\r\n        const studentDescriptor = Array.isArray(student.faceDescriptor)\r\n          ? new Float32Array(student.faceDescriptor)\r\n          : student.faceDescriptor;\r\n        \r\n        const distance = faceapi.euclideanDistance(descriptor, studentDescriptor);\r\n        \r\n        if (distance < minDistance && distance < threshold) {\r\n          minDistance = distance;\r\n          matchedStudent = student;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return matchedStudent ? { student: matchedStudent, distance: minDistance } : null;\r\n  } catch (error) {\r\n    console.error('Error comparing faces:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Draw face detections on canvas\r\nexport const drawFaceDetections = (canvas, detections, mirrored = true) => {\r\n  if (!canvas || !detections || detections.length === 0) {\r\n    return;\r\n  }\r\n\r\n  const ctx = canvas.getContext('2d');\r\n  \r\n  // Clear the entire canvas\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  \r\n  // Save the current transform\r\n  ctx.save();\r\n  \r\n  // Apply mirroring if needed\r\n  if (mirrored) {\r\n    ctx.translate(canvas.width, 0);\r\n    ctx.scale(-1, 1);\r\n  }\r\n  \r\n  // Draw each detection\r\n  detections.forEach(detection => {\r\n    const box = detection.detection.box;\r\n    \r\n    ctx.strokeStyle = '#FFFF00';\r\n    ctx.lineWidth = 2;\r\n    \r\n    // Draw the box at the appropriate position\r\n    if (mirrored) {\r\n      // Already flipped the context, so draw normally\r\n      ctx.strokeRect(box.x, box.y, box.width, box.height);\r\n    } else {\r\n      ctx.strokeRect(box.x, box.y, box.width, box.height);\r\n    }\r\n  });\r\n  \r\n  // Restore the original transform (this is safer than setTransform)\r\n  ctx.restore();\r\n};\r\n\r\n// Capture a face image from the canvas\r\nexport const captureFaceImage = (videoElement, canvas, detection) => {\r\n  if (!videoElement || !canvas || !detection) {\r\n    console.error(\"Missing required elements for face capture\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    console.log(\"Starting face capture...\");\r\n    \r\n    // Create a separate canvas for the capture (to avoid flipping issues)\r\n    const captureCanvas = document.createElement('canvas');\r\n    captureCanvas.width = videoElement.videoWidth || 640;\r\n    captureCanvas.height = videoElement.videoHeight || 480;\r\n    \r\n    const ctx = captureCanvas.getContext('2d');\r\n    \r\n    // Clear the canvas first\r\n    ctx.clearRect(0, 0, captureCanvas.width, captureCanvas.height);\r\n    \r\n    // The video is mirrored, so we need to flip it back for the capture\r\n    ctx.save();\r\n    ctx.translate(captureCanvas.width, 0);\r\n    ctx.scale(-1, 1);\r\n    \r\n    // Draw the video frame to the canvas\r\n    ctx.drawImage(\r\n      videoElement, \r\n      0, 0, \r\n      captureCanvas.width, captureCanvas.height\r\n    );\r\n    \r\n    // Reset the transformation\r\n    ctx.restore();\r\n    \r\n    // Draw a rectangle around the face to indicate it was captured\r\n    const box = detection.detection.box;\r\n    ctx.strokeStyle = '#00FF00';\r\n    ctx.lineWidth = 3;\r\n    ctx.strokeRect(\r\n      captureCanvas.width - box.x - box.width,\r\n      box.y, \r\n      box.width, \r\n      box.height\r\n    );\r\n    \r\n    console.log(\"Face captured successfully\");\r\n    \r\n    // Return the image data and descriptor\r\n    return {\r\n      descriptor: Array.from(detection.descriptor),\r\n      imageData: captureCanvas.toDataURL('image/jpeg')\r\n    };\r\n  } catch (error) {\r\n    console.error('Error capturing face image:', error);\r\n    return null;\r\n  }\r\n};","// Database service for handling IndexedDB operations\r\n\r\n// Initialize the database\r\nexport const initDB = () => {\r\n    return new Promise((resolve, reject) => {\r\n      const request = indexedDB.open('StudentAttendanceDB', 1);\r\n      \r\n      request.onerror = (event) => {\r\n        console.error('Error opening database:', event);\r\n        reject(event);\r\n      };\r\n      \r\n      request.onsuccess = (event) => {\r\n        const db = event.target.result;\r\n        resolve(db);\r\n      };\r\n      \r\n      request.onupgradeneeded = (event) => {\r\n        const db = event.target.result;\r\n        \r\n        // Create students store\r\n        if (!db.objectStoreNames.contains('students')) {\r\n          const studentStore = db.createObjectStore('students', { keyPath: 'id', autoIncrement: true });\r\n          studentStore.createIndex('name', 'name', { unique: false });\r\n        }\r\n        \r\n        // Create attendance log store\r\n        if (!db.objectStoreNames.contains('attendance')) {\r\n          const attendanceStore = db.createObjectStore('attendance', { keyPath: 'id', autoIncrement: true });\r\n          attendanceStore.createIndex('studentId', 'studentId', { unique: false });\r\n          attendanceStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n          attendanceStore.createIndex('className', 'className', { unique: false });\r\n        }\r\n      };\r\n    });\r\n  };\r\n  \r\n  // Load all students from the database\r\n  export const loadStudentsFromDB = async () => {\r\n    try {\r\n      const db = await initDB();\r\n      return new Promise((resolve, reject) => {\r\n        const transaction = db.transaction(['students'], 'readonly');\r\n        const store = transaction.objectStore('students');\r\n        const request = store.getAll();\r\n        \r\n        request.onsuccess = () => {\r\n          resolve(request.result);\r\n        };\r\n        \r\n        request.onerror = (error) => {\r\n          console.error('Error loading students:', error);\r\n          reject(error);\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error('Database error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Load attendance records from the database, optionally filtered by class\r\n  export const loadAttendanceFromDB = async (className = null) => {\r\n    try {\r\n      const db = await initDB();\r\n      return new Promise((resolve, reject) => {\r\n        const transaction = db.transaction(['attendance'], 'readonly');\r\n        const store = transaction.objectStore('attendance');\r\n        const request = store.getAll();\r\n        \r\n        request.onsuccess = () => {\r\n          // Sort by timestamp in descending order (newest first)\r\n          const sortedAttendance = request.result.sort((a, b) => b.timestamp - a.timestamp);\r\n          \r\n          // Filter by class if a className is provided\r\n          const filteredAttendance = className \r\n            ? sortedAttendance.filter(log => log.className === className)\r\n            : sortedAttendance;\r\n            \r\n          resolve(filteredAttendance);\r\n        };\r\n        \r\n        request.onerror = (error) => {\r\n          console.error('Error loading attendance:', error);\r\n          reject(error);\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error('Database error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Save a student to the database\r\n  export const saveStudentToDB = async (studentData) => {\r\n    try {\r\n      const db = await initDB();\r\n      return new Promise((resolve, reject) => {\r\n        const transaction = db.transaction(['students'], 'readwrite');\r\n        const store = transaction.objectStore('students');\r\n        \r\n        const request = store.add(studentData);\r\n        \r\n        request.onsuccess = () => {\r\n          resolve(request.result);\r\n        };\r\n        \r\n        request.onerror = (error) => {\r\n          console.error('Error saving student:', error);\r\n          reject(error);\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error('Database error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Check if a student already has attendance for today for a specific class\r\n  export const hasAttendanceForTodayInClass = async (studentId, className) => {\r\n    try {\r\n      const logs = await loadAttendanceFromDB();\r\n      const today = new Date().toLocaleDateString();\r\n      \r\n      return logs.some(log => \r\n        log.studentId === studentId && \r\n        log.className === className &&\r\n        new Date(log.timestamp).toLocaleDateString() === today\r\n      );\r\n    } catch (error) {\r\n      console.error('Error checking attendance:', error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Log attendance for a student in a specific class\r\n  export const logAttendanceToDB = async (studentId, studentName, className) => {\r\n    try {\r\n      // Check if already logged today for this class\r\n      const alreadyLoggedToday = await hasAttendanceForTodayInClass(studentId, className);\r\n      if (alreadyLoggedToday) {\r\n        console.log(`Student ${studentName} already has attendance for today in class ${className}`);\r\n        return null;\r\n      }\r\n      \r\n      const db = await initDB();\r\n      return new Promise((resolve, reject) => {\r\n        const transaction = db.transaction(['attendance'], 'readwrite');\r\n        const store = transaction.objectStore('attendance');\r\n        \r\n        const now = new Date();\r\n        const logEntry = {\r\n          studentId,\r\n          studentName,\r\n          className,\r\n          timestamp: now.getTime(),\r\n          date: now.toLocaleDateString(),\r\n          time: now.toLocaleTimeString(),\r\n          sessionDate: now.toDateString() // Use date string for class session identification\r\n        };\r\n        \r\n        const request = store.add(logEntry);\r\n        \r\n        request.onsuccess = () => {\r\n          resolve({\r\n            id: request.result,\r\n            ...logEntry\r\n          });\r\n        };\r\n        \r\n        request.onerror = (error) => {\r\n          console.error('Error logging attendance:', error);\r\n          reject(error);\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error('Database error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Delete a student from the database\r\n  export const deleteStudentFromDB = async (studentId) => {\r\n    try {\r\n      const db = await initDB();\r\n      return new Promise((resolve, reject) => {\r\n        const transaction = db.transaction(['students'], 'readwrite');\r\n        const store = transaction.objectStore('students');\r\n        \r\n        const request = store.delete(studentId);\r\n        \r\n        request.onsuccess = () => {\r\n          resolve(true);\r\n        };\r\n        \r\n        request.onerror = (error) => {\r\n          console.error('Error deleting student:', error);\r\n          reject(error);\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error('Database error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Clear all attendance logs\r\n  export const clearAttendanceLogs = async () => {\r\n    try {\r\n      const db = await initDB();\r\n      return new Promise((resolve, reject) => {\r\n        const transaction = db.transaction(['attendance'], 'readwrite');\r\n        const store = transaction.objectStore('attendance');\r\n        \r\n        const request = store.clear();\r\n        \r\n        request.onsuccess = () => {\r\n          resolve(true);\r\n        };\r\n        \r\n        request.onerror = (error) => {\r\n          console.error('Error clearing attendance logs:', error);\r\n          reject(error);\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error('Database error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Clear attendance logs for a specific class\r\n  export const clearClassAttendanceLogs = async (className) => {\r\n    try {\r\n      const db = await initDB();\r\n      const allLogs = await loadAttendanceFromDB();\r\n      const logsToKeep = allLogs.filter(log => log.className !== className);\r\n      \r\n      // Clear all logs\r\n      await clearAttendanceLogs();\r\n      \r\n      // Re-add logs to keep\r\n      const transaction = db.transaction(['attendance'], 'readwrite');\r\n      const store = transaction.objectStore('attendance');\r\n      \r\n      for (const log of logsToKeep) {\r\n        const logCopy = { ...log };\r\n        delete logCopy.id; // Remove ID to let it auto-increment\r\n        store.add(logCopy);\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Database error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Get all available class names from attendance logs\r\n  export const getClassNames = async () => {\r\n    try {\r\n      const logs = await loadAttendanceFromDB();\r\n      const classNames = new Set();\r\n      \r\n      logs.forEach(log => {\r\n        if (log.className) {\r\n          classNames.add(log.className);\r\n        }\r\n      });\r\n      \r\n      return Array.from(classNames);\r\n    } catch (error) {\r\n      console.error('Error getting class names:', error);\r\n      return [];\r\n    }\r\n  };","import React, { useRef, useEffect, useState } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nconst WebcamCapture = ({ onCapture, onCancel }) => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const streamRef = useRef(null);\r\n  const [isCameraReady, setIsCameraReady] = useState(false);\r\n  const [isFaceDetected, setIsFaceDetected] = useState(false);\r\n  const [isCapturing, setIsCapturing] = useState(false);\r\n\r\n  // Start the camera when component mounts\r\n  useEffect(() => {\r\n    const startCamera = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ \r\n          video: { \r\n            width: { ideal: 640 },\r\n            height: { ideal: 480 },\r\n            facingMode: \"user\" \r\n          } \r\n        });\r\n        \r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n          streamRef.current = stream;\r\n          \r\n          // Wait for video to be ready\r\n          videoRef.current.onloadedmetadata = () => {\r\n            setIsCameraReady(true);\r\n          };\r\n        }\r\n      } catch (error) {\r\n        console.error('Error accessing camera:', error);\r\n        alert('Cannot access camera. Please ensure you have granted camera permissions.');\r\n      }\r\n    };\r\n\r\n    startCamera();\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      if (streamRef.current) {\r\n        streamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Run face detection when camera is ready\r\n  useEffect(() => {\r\n    let detectionInterval = null;\r\n    \r\n    if (isCameraReady) {\r\n      // Start face detection loop\r\n      detectionInterval = setInterval(async () => {\r\n        try {\r\n          if (!videoRef.current || videoRef.current.readyState !== 4) return;\r\n          \r\n          const detections = await faceapi.detectSingleFace(\r\n            videoRef.current,\r\n            new faceapi.TinyFaceDetectorOptions()\r\n          );\r\n          \r\n          setIsFaceDetected(!!detections);\r\n          \r\n          // Draw rectangle around face if detected\r\n          if (detections && canvasRef.current) {\r\n            const canvas = canvasRef.current;\r\n            const context = canvas.getContext('2d');\r\n            \r\n            // Match canvas size to video\r\n            canvas.width = videoRef.current.videoWidth;\r\n            canvas.height = videoRef.current.videoHeight;\r\n            \r\n            // Clear previous drawings\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            \r\n            // Draw rectangle around face\r\n            const { box } = detections;\r\n            \r\n            // Save current transform\r\n            context.save();\r\n            \r\n            // Apply mirroring to match the mirrored video\r\n            context.translate(canvas.width, 0);\r\n            context.scale(-1, 1);\r\n            \r\n            // Draw face rectangle\r\n            context.strokeStyle = '#00FF00';\r\n            context.lineWidth = 3;\r\n            context.strokeRect(box.x, box.y, box.width, box.height);\r\n            \r\n            // Restore transform\r\n            context.restore();\r\n            \r\n            // Add \"Ready to capture\" text on top of the detection box\r\n            const textX = canvas.width - box.x - box.width;\r\n            const textY = box.y;\r\n            \r\n            // Draw text background\r\n            context.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n            context.fillRect(textX, textY - 25, 180, 25);\r\n            \r\n            // Draw text\r\n            context.fillStyle = '#FFFFFF';\r\n            context.font = '16px Arial';\r\n            context.fillText('Ready to capture', textX + 5, textY - 7);\r\n            \r\n          } else if (canvasRef.current) {\r\n            // Clear canvas if no face detected\r\n            const canvas = canvasRef.current;\r\n            const context = canvas.getContext('2d');\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n          }\r\n        } catch (error) {\r\n          console.error('Face detection error:', error);\r\n        }\r\n      }, 200);\r\n    }\r\n    \r\n    return () => {\r\n      if (detectionInterval) clearInterval(detectionInterval);\r\n    };\r\n  }, [isCameraReady]);\r\n\r\n  // Handle capture button click\r\n  const handleCapture = async () => {\r\n    if (!videoRef.current || !isFaceDetected) return;\r\n\r\n    try {\r\n      setIsCapturing(true);\r\n      \r\n      // Detect face to get descriptor data\r\n      const detections = await faceapi.detectSingleFace(\r\n        videoRef.current,\r\n        new faceapi.TinyFaceDetectorOptions()\r\n      ).withFaceLandmarks().withFaceDescriptor();\r\n      \r\n      if (!detections) {\r\n        alert(\"No face detected. Please position your face in the camera view.\");\r\n        setIsCapturing(false);\r\n        return;\r\n      }\r\n      \r\n      // Create a canvas to take the snapshot\r\n      const captureCanvas = document.createElement('canvas');\r\n      captureCanvas.width = videoRef.current.videoWidth;\r\n      captureCanvas.height = videoRef.current.videoHeight;\r\n      \r\n      const ctx = captureCanvas.getContext('2d');\r\n      \r\n      // Handle mirroring\r\n      ctx.translate(captureCanvas.width, 0);\r\n      ctx.scale(-1, 1);\r\n      ctx.drawImage(videoRef.current, 0, 0);\r\n      \r\n      // Reset transform\r\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n      \r\n      // Get the image data\r\n      const imageData = captureCanvas.toDataURL('image/jpeg');\r\n      \r\n      // Call the onCapture callback with image and face data\r\n      onCapture({\r\n        imageData,\r\n        descriptor: Array.from(detections.descriptor)\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error capturing face:', error);\r\n      alert('Error capturing face. Please try again.');\r\n    } finally {\r\n      setIsCapturing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"webcam-capture\">\r\n      <div className=\"video-container\">\r\n        <video\r\n          ref={videoRef}\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n          style={{ transform: 'scaleX(-1)' }}\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%'\r\n          }}\r\n        />\r\n        \r\n        {!isCameraReady && (\r\n          <div className=\"loading-overlay\">\r\n            <p>Initializing camera...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"capture-controls\">\r\n        <div className=\"face-status\">\r\n          {isFaceDetected ? (\r\n            <span className=\"face-detected\">Face detected ✓</span>\r\n          ) : (\r\n            <span className=\"no-face\">No face detected ⨯</span>\r\n          )}\r\n        </div>\r\n        \r\n        <button\r\n          className=\"btn-capture\"\r\n          onClick={handleCapture}\r\n          disabled={!isFaceDetected || isCapturing || !isCameraReady}\r\n        >\r\n          {isCapturing ? 'Capturing...' : 'Take Photo'}\r\n        </button>\r\n        \r\n        <button\r\n          className=\"btn-cancel\"\r\n          onClick={onCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebcamCapture;","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: null, errorInfo: null };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    console.error(\"Error caught by boundary:\", error, errorInfo);\r\n    this.setState({ error, errorInfo });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return (\r\n        <div className=\"error-container\">\r\n          <h2>Something went wrong</h2>\r\n          <p>There was an error in this component. The rest of the application should still work.</p>\r\n          <div className=\"error-details\">\r\n            <p>{this.state.error && this.state.error.toString()}</p>\r\n            <details>\r\n              <summary>Component Stack</summary>\r\n              <p>{this.state.errorInfo && this.state.errorInfo.componentStack}</p>\r\n            </details>\r\n          </div>\r\n          <button \r\n            onClick={() => this.setState({ hasError: false, error: null, errorInfo: null })}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useState } from 'react';\r\nimport WebcamCapture from './WebcamCapture';\r\nimport ErrorBoundary from './ErrorBoundary';\r\n\r\nconst StudentRegistrationForm = ({ onRegister, onCancel, selectedClass }) => {\r\n  const [step, setStep] = useState('capture'); // 'capture' or 'details'\r\n  const [studentName, setStudentName] = useState('');\r\n  const [capturedImage, setCapturedImage] = useState(null);\r\n  const [faceDescriptor, setFaceDescriptor] = useState(null);\r\n\r\n  // Handle photo capture from WebcamCapture component\r\n  const handleCapture = (captureData) => {\r\n    setCapturedImage(captureData.imageData);\r\n    setFaceDescriptor(captureData.descriptor);\r\n    setStep('details');\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!studentName.trim()) {\r\n      alert('Please enter a student name');\r\n      return;\r\n    }\r\n    \r\n    // Call the onRegister callback with student data\r\n    onRegister({\r\n      name: studentName,\r\n      faceImage: capturedImage,\r\n      faceDescriptor: faceDescriptor,\r\n      registeredAt: new Date().toISOString()\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-registration-form\">\r\n      <h2>Register New Student</h2>\r\n      \r\n      {step === 'capture' ? (\r\n        <ErrorBoundary>\r\n          <WebcamCapture\r\n            onCapture={handleCapture}\r\n            onCancel={onCancel}\r\n          />\r\n        </ErrorBoundary>\r\n      ) : (\r\n        <div className=\"student-details\">\r\n          <div className=\"captured-photo\">\r\n            <img src={capturedImage} alt=\"Captured student\" />\r\n          </div>\r\n          \r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"studentName\">Student Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"studentName\"\r\n                value={studentName}\r\n                onChange={(e) => setStudentName(e.target.value)}\r\n                placeholder=\"Enter student name\"\r\n                required\r\n                autoFocus\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"className\">Class:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"className\"\r\n                value={selectedClass || ''}\r\n                disabled\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-actions\">\r\n              <button type=\"submit\" className=\"btn-register\">\r\n                Register Student\r\n              </button>\r\n              \r\n              <button \r\n                type=\"button\" \r\n                className=\"btn-retake\"\r\n                onClick={() => setStep('capture')}\r\n              >\r\n                Retake Photo\r\n              </button>\r\n              \r\n              <button \r\n                type=\"button\" \r\n                className=\"btn-cancel\"\r\n                onClick={onCancel}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentRegistrationForm;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { detectFaces, drawFaceDetections, compareFaces } from '../services/faceDetectionServiceCDN';\r\nimport { \r\n  saveStudentToDB, \r\n  logAttendanceToDB, \r\n  hasAttendanceForTodayInClass \r\n} from '../services/databaseService';\r\nimport StudentRegistrationForm from './StudentRegistrationForm';\r\nimport ErrorBoundary from './ErrorBoundary';\r\n\r\nconst RegisterTab = ({ \r\n  students, \r\n  setStudents, \r\n  setAttendanceLog, \r\n  selectedClass,\r\n  onDeleteStudent \r\n}) => {\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [detectedFaces, setDetectedFaces] = useState([]);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [recognizedStudent, setRecognizedStudent] = useState(null);\r\n\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const streamRef = useRef(null);\r\n  const detectionIntervalRef = useRef(null);\r\n\r\n  // Start the camera stream\r\n  const startCamera = async () => {\r\n    try {\r\n      if (streamRef.current) return; // Camera already running\r\n      \r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        streamRef.current = stream;\r\n        setIsCameraActive(true);\r\n        \r\n        // Start face detection when camera is active\r\n        startFaceDetection();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing camera:', error);\r\n      alert('Cannot access camera. Please ensure you have granted camera permissions.');\r\n    }\r\n  };\r\n\r\n  // Stop the camera stream\r\n  const stopCamera = () => {\r\n    if (streamRef.current) {\r\n      const tracks = streamRef.current.getTracks();\r\n      tracks.forEach(track => track.stop());\r\n      streamRef.current = null;\r\n    }\r\n    \r\n    if (detectionIntervalRef.current) {\r\n      clearInterval(detectionIntervalRef.current);\r\n      detectionIntervalRef.current = null;\r\n    }\r\n    \r\n    setIsCameraActive(false);\r\n    setDetectedFaces([]);\r\n  };\r\n\r\n  // Start face detection loop\r\n  const startFaceDetection = () => {\r\n    if (detectionIntervalRef.current) return;\r\n    \r\n    // Use a simple interval for better performance \r\n    detectionIntervalRef.current = setInterval(async () => {\r\n      if (!videoRef.current || videoRef.current.readyState !== 4 || !canvasRef.current) {\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const video = videoRef.current;\r\n        const canvas = canvasRef.current;\r\n        \r\n        // Set canvas dimensions to match video\r\n        if (canvas.width !== video.videoWidth || canvas.height !== video.videoHeight) {\r\n          canvas.width = video.videoWidth;\r\n          canvas.height = video.videoHeight;\r\n        }\r\n        \r\n        // Don't detect faces when registering a new student\r\n        if (isRegistering) {\r\n          // Clear canvas\r\n          const ctx = canvas.getContext('2d');\r\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n          return;\r\n        }\r\n        \r\n        // Detect faces\r\n        const faces = await detectFaces(video);\r\n        setDetectedFaces(faces);\r\n        \r\n        // Draw detections on canvas with recognized person info if available\r\n        drawFaceDetections(canvas, faces, true, recognizedStudent);\r\n        \r\n        // Process detected faces for recognition (not during registration)\r\n        if (faces.length > 0 && !isProcessing && !isRegistering) {\r\n          recognizeFace(faces[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error in face detection cycle:', error);\r\n      }\r\n    }, 300);\r\n  };\r\n\r\n  // Recognize a detected face\r\n  const recognizeFace = async (detectedFace) => {\r\n    if (students.length === 0 || !detectedFace || isProcessing || !selectedClass) return;\r\n    \r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      // Find matching student\r\n      const match = compareFaces(detectedFace.descriptor, students);\r\n      \r\n      // If face recognized\r\n      if (match) {\r\n        console.log('Student recognized:', match.student.name, 'with distance:', match.distance);\r\n        \r\n        // Check if already logged in today for this class\r\n        const alreadyLoggedToday = await hasAttendanceForTodayInClass(match.student.id, selectedClass);\r\n        \r\n        if (!alreadyLoggedToday) {\r\n          // Log attendance for the class session\r\n          const newLog = await logAttendanceToDB(match.student.id, match.student.name, selectedClass);\r\n          if (newLog) {\r\n            setAttendanceLog(prev => [newLog, ...prev]);\r\n            \r\n            // Show attendance logged notification ONLY for new attendances\r\n            setRecognizedStudent({\r\n              name: match.student.name,\r\n              timestamp: new Date().toLocaleTimeString(),\r\n              className: selectedClass,\r\n              newAttendance: true\r\n            });\r\n            \r\n            // Clear notification after 5 seconds\r\n            setTimeout(() => {\r\n              setRecognizedStudent(null);\r\n            }, 5000);\r\n          }\r\n        } else {\r\n          // Just update the recognized student for the face label without showing notification\r\n          setRecognizedStudent({\r\n            name: match.student.name,\r\n            className: selectedClass,\r\n            newAttendance: false\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during face recognition:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Register a new student\r\n  const handleRegisterStudent = async (studentData) => {\r\n    try {\r\n      const newStudentId = await saveStudentToDB(studentData);\r\n      const newStudent = { ...studentData, id: newStudentId };\r\n      setStudents(prev => [...prev, newStudent]);\r\n      \r\n      // If a class is selected, log attendance for the newly registered student\r\n      if (selectedClass) {\r\n        const newLog = await logAttendanceToDB(newStudentId, studentData.name, selectedClass);\r\n        if (newLog) {\r\n          setAttendanceLog(prev => [newLog, ...prev]);\r\n        }\r\n      }\r\n      \r\n      // Exit registration mode\r\n      setIsRegistering(false);\r\n      \r\n      alert(`Student \"${studentData.name}\" registered successfully!`);\r\n    } catch (error) {\r\n      console.error('Error registering student:', error);\r\n      alert('Failed to register student. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Clean up on component unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      stopCamera();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"register-tab\">\r\n      {isRegistering ? (\r\n        <ErrorBoundary>\r\n          <StudentRegistrationForm\r\n            onRegister={handleRegisterStudent}\r\n            onCancel={() => setIsRegistering(false)}\r\n            selectedClass={selectedClass}\r\n          />\r\n        </ErrorBoundary>\r\n      ) : (\r\n        <>\r\n          <div className=\"camera-container\">\r\n            {!selectedClass && (\r\n              <div className=\"class-warning\">\r\n                <p>Please select or add a class to begin taking attendance</p>\r\n              </div>\r\n            )}\r\n            <div className=\"video-wrapper\">\r\n              <video\r\n                ref={videoRef}\r\n                autoPlay\r\n                playsInline\r\n                muted\r\n                style={{ \r\n                  transform: 'scaleX(-1)',\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  objectFit: 'cover',\r\n                  display: isCameraActive ? 'block' : 'none'\r\n                }}\r\n              />\r\n              <canvas\r\n                ref={canvasRef}\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  pointerEvents: 'none',\r\n                  display: isCameraActive ? 'block' : 'none'\r\n                }}\r\n              />\r\n              \r\n              {!isCameraActive && (\r\n                <div className=\"camera-placeholder\">\r\n                  <p>Camera is turned off</p>\r\n                  <p>Click \"Start Camera\" to begin</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {recognizedStudent && recognizedStudent.newAttendance && (\r\n              <div className=\"recognition-alert\" style={{ backgroundColor: 'rgba(46, 204, 113, 0.9)' }}>\r\n                <p>✅ Attendance logged for: <strong>{recognizedStudent.name}</strong></p>\r\n                <p>Class: {recognizedStudent.className}</p>\r\n                <p>Time: {recognizedStudent.timestamp}</p>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"camera-controls\">\r\n              {isCameraActive ? (\r\n                <>\r\n                  <button onClick={stopCamera} className=\"btn btn-danger\">\r\n                    Stop Camera\r\n                  </button>\r\n                  \r\n                  <button \r\n                    onClick={() => setIsRegistering(true)}\r\n                    className=\"btn btn-success\"\r\n                    disabled={!selectedClass}\r\n                  >\r\n                    Register New Student\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button onClick={startCamera} className=\"btn btn-primary\">\r\n                  Start Camera\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"students-list\">\r\n            <h3>Registered Students ({students.length})</h3>\r\n            \r\n            {students.length === 0 ? (\r\n              <p>No students registered yet.</p>\r\n            ) : (\r\n              <div className=\"students-grid\">\r\n                {students.map(student => (\r\n                  <div key={student.id} className=\"student-card\">\r\n                    <img src={student.faceImage} alt={student.name} />\r\n                    <h4>{student.name}</h4>\r\n                    <p>ID: {student.id}</p>\r\n                    <p>Registered: {new Date(student.registeredAt).toLocaleDateString()}</p>\r\n                    <button\r\n                      onClick={() => onDeleteStudent(student.id)}\r\n                      className=\"btn-delete\"\r\n                      title=\"Delete student\"\r\n                    >\r\n                      ❌\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterTab;","import React from 'react';\r\n\r\nconst AttendanceTab = ({ attendanceLog, selectedClass }) => {\r\n  // Group attendance logs by date\r\n  const groupedByDate = {};\r\n  attendanceLog.forEach(log => {\r\n    if (!groupedByDate[log.date]) {\r\n      groupedByDate[log.date] = [];\r\n    }\r\n    groupedByDate[log.date].push(log);\r\n  });\r\n\r\n  // Sort dates in descending order (newest first)\r\n  const sortedDates = Object.keys(groupedByDate).sort((a, b) => \r\n    new Date(b) - new Date(a)\r\n  );\r\n\r\n  return (\r\n    <div className=\"attendance-tab\">\r\n      <h2>\r\n        <span className=\"material-icons\" style={{ verticalAlign: 'middle', marginRight: '10px' }}>\r\n          fact_check\r\n        </span>\r\n        {selectedClass ? `Attendance Log: ${selectedClass}` : 'All Attendance Logs'}\r\n      </h2>\r\n      \r\n      {attendanceLog.length === 0 ? (\r\n        <div className=\"no-attendance\">\r\n          <span className=\"material-icons\" style={{ fontSize: '48px', marginBottom: '15px', opacity: 0.5 }}>\r\n            event_busy\r\n          </span>\r\n          <p>No attendance records {selectedClass ? `for ${selectedClass}` : ''} yet.</p>\r\n          <p>Attendance will appear here once students are checked in.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"attendance-by-date\">\r\n          {sortedDates.map(date => (\r\n            <div key={date} className=\"attendance-day\">\r\n              <h3 className=\"date-header\">\r\n                <span className=\"material-icons\" style={{ verticalAlign: 'middle', marginRight: '10px' }}>\r\n                  calendar_today\r\n                </span>\r\n                {date}\r\n                <span className=\"attendance-count\">{groupedByDate[date].length} students</span>\r\n              </h3>\r\n              <div className=\"attendance-list\">\r\n                <table className=\"attendance-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>\r\n                        <span className=\"material-icons\" style={{ fontSize: '18px', verticalAlign: 'middle', marginRight: '5px' }}>\r\n                          person\r\n                        </span>\r\n                        Student\r\n                      </th>\r\n                      <th>\r\n                        <span className=\"material-icons\" style={{ fontSize: '18px', verticalAlign: 'middle', marginRight: '5px' }}>\r\n                          school\r\n                        </span>\r\n                        Class\r\n                      </th>\r\n                      <th>\r\n                        <span className=\"material-icons\" style={{ fontSize: '18px', verticalAlign: 'middle', marginRight: '5px' }}>\r\n                          schedule\r\n                        </span>\r\n                        Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {groupedByDate[date].map(log => (\r\n                      <tr key={log.id}>\r\n                        <td>{log.studentName}</td>\r\n                        <td>{log.className || 'N/A'}</td>\r\n                        <td>{log.time}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceTab;","import React, { useState } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nconst DebugModels = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const addLog = (message) => {\r\n    setLogs(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);\r\n  };\r\n\r\n  const testModelLoading = async () => {\r\n    setLoading(true);\r\n    setLogs([]);\r\n    \r\n    try {\r\n      // Log the current base URL for reference\r\n      addLog(`Base URL: ${window.location.origin}`);\r\n      addLog('Starting model tests...');\r\n      \r\n      // Use the CDN URL for models\r\n      const MODEL_URL = 'https://justadudewhohacks.github.io/face-api.js/models';\r\n      addLog(`Using CDN URL: ${MODEL_URL}`);\r\n      \r\n      // Test loading individual models\r\n      const models = [\r\n        { name: 'Tiny Face Detector', loader: faceapi.nets.tinyFaceDetector },\r\n        { name: 'Face Landmark 68', loader: faceapi.nets.faceLandmark68Net },\r\n        { name: 'Face Recognition', loader: faceapi.nets.faceRecognitionNet }\r\n      ];\r\n      \r\n      for (const model of models) {\r\n        try {\r\n          addLog(`Loading ${model.name}...`);\r\n          await model.loader.loadFromUri(MODEL_URL);\r\n          addLog(`✅ ${model.name} loaded successfully`);\r\n        } catch (error) {\r\n          addLog(`❌ Failed to load ${model.name}: ${error.message}`);\r\n        }\r\n      }\r\n      \r\n      addLog('Model tests completed');\r\n    } catch (error) {\r\n      addLog(`❌ Error during tests: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"debug-container\" style={{ maxWidth: '700px', margin: '0 auto', padding: '20px' }}>\r\n      <h2>Model Loading Debug Tool</h2>\r\n      \r\n      <button \r\n        onClick={testModelLoading} \r\n        disabled={loading}\r\n        style={{\r\n          padding: '10px 15px',\r\n          backgroundColor: '#3498db',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '4px',\r\n          cursor: loading ? 'not-allowed' : 'pointer',\r\n          marginBottom: '15px'\r\n        }}\r\n      >\r\n        {loading ? 'Testing...' : 'Test Model Loading'}\r\n      </button>\r\n      \r\n      <div style={{ \r\n        backgroundColor: '#f5f5f5', \r\n        padding: '15px', \r\n        borderRadius: '5px',\r\n        maxHeight: '400px',\r\n        overflowY: 'auto',\r\n        fontFamily: 'monospace',\r\n        fontSize: '14px',\r\n        lineHeight: '1.5'\r\n      }}>\r\n        {logs.length > 0 ? (\r\n          logs.map((log, index) => (\r\n            <div key={index} style={{ \r\n              marginBottom: '8px',\r\n              color: log.includes('❌') ? '#e74c3c' : log.includes('✅') ? '#2ecc71' : '#333'\r\n            }}>\r\n              {log}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div style={{ color: '#777', fontStyle: 'italic' }}>\r\n            Click \"Test Model Loading\" to begin debugging\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DebugModels;","import React, { useState, useEffect } from 'react';\n// Import the CDN version instead of the local version\nimport { loadModels } from './services/faceDetectionServiceCDN';\nimport { \n  loadStudentsFromDB, \n  loadAttendanceFromDB,\n  getClassNames,\n  deleteStudentFromDB,\n  clearAttendanceLogs,\n  clearClassAttendanceLogs \n} from './services/databaseService';\nimport RegisterTab from './components/RegisterTab';\nimport AttendanceTab from './components/AttendanceTab';\nimport DebugModels from './components/DebugModels';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport './App.css';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState('register');\n  const [modelsLoaded, setModelsLoaded] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [attendanceLog, setAttendanceLog] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [classes, setClasses] = useState([]);\n  const [selectedClass, setSelectedClass] = useState('');\n  const [showManagement, setShowManagement] = useState(false);\n\n  // Load face detection models and database data on component mount\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        setLoading(true);\n        \n        // Load face-api.js models\n        const modelsSuccess = await loadModels();\n        setModelsLoaded(modelsSuccess);\n        \n        // Load students from database\n        const loadedStudents = await loadStudentsFromDB();\n        setStudents(loadedStudents || []);\n        \n        // Load attendance records\n        const loadedAttendance = await loadAttendanceFromDB();\n        setAttendanceLog(loadedAttendance || []);\n        \n        // Load available classes\n        const classNames = await getClassNames();\n        setClasses(classNames || []);\n        \n        // Set default class if available\n        if (classNames.length > 0) {\n          setSelectedClass(classNames[0]);\n        }\n      } catch (error) {\n        console.error('Error initializing app:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initialize();\n  }, []);\n\n  // Load attendance records when switching to attendance tab or changing class\n  useEffect(() => {\n    if (activeTab === 'attendance') {\n      loadAttendanceFromDB(selectedClass).then(logs => setAttendanceLog(logs || []));\n    }\n  }, [activeTab, selectedClass]);\n  \n  // Add a new class\n  const handleAddClass = (newClassName) => {\n    if (newClassName && !classes.includes(newClassName)) {\n      setClasses([...classes, newClassName]);\n      setSelectedClass(newClassName);\n    }\n  };\n  \n  // Delete a student\n  const handleDeleteStudent = async (studentId) => {\n    if (window.confirm('Are you sure you want to delete this student?')) {\n      try {\n        await deleteStudentFromDB(studentId);\n        setStudents(students.filter(s => s.id !== studentId));\n      } catch (error) {\n        console.error('Error deleting student:', error);\n      }\n    }\n  };\n  \n  // Clear attendance logs for a class\n  const handleClearAttendance = async (className = null) => {\n    const confirmMessage = className \n      ? `Are you sure you want to clear all attendance records for ${className}?`\n      : 'Are you sure you want to clear ALL attendance records?';\n      \n    if (window.confirm(confirmMessage)) {\n      try {\n        if (className) {\n          await clearClassAttendanceLogs(className);\n        } else {\n          await clearAttendanceLogs();\n        }\n        setAttendanceLog([]);\n      } catch (error) {\n        console.error('Error clearing attendance logs:', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header>\n        <h1>Student Attendance System</h1>\n        \n        <div className=\"class-selector\">\n          <select \n            value={selectedClass} \n            onChange={(e) => setSelectedClass(e.target.value)}\n            disabled={classes.length === 0}\n          >\n            {classes.length === 0 && (\n              <option value=\"\">No classes available</option>\n            )}\n            {classes.map(cls => (\n              <option key={cls} value={cls}>{cls}</option>\n            ))}\n          </select>\n          \n          <button \n            onClick={() => {\n              const newClass = prompt('Enter new class name:');\n              if (newClass) handleAddClass(newClass);\n            }}\n            className=\"btn btn-sm\"\n          >\n            Add Class\n          </button>\n        </div>\n        \n        <div className=\"tabs\">\n          <button \n            className={activeTab === 'register' ? 'active' : ''}\n            onClick={() => setActiveTab('register')}\n          >\n            Register &amp; Check-In\n          </button>\n          <button \n            className={activeTab === 'attendance' ? 'active' : ''}\n            onClick={() => setActiveTab('attendance')}\n          >\n            Attendance Log\n          </button>\n          <button \n            className={showManagement ? 'active' : ''}\n            onClick={() => setShowManagement(!showManagement)}\n          >\n            Manage Data\n          </button>\n        </div>\n        \n        {showManagement && (\n          <div className=\"management-panel\">\n            <div className=\"management-section\">\n              <h3>Student Management</h3>\n              <button \n                onClick={() => {\n                  if (window.confirm('Are you sure you want to delete ALL students?')) {\n                    students.forEach(s => deleteStudentFromDB(s.id));\n                    setStudents([]);\n                  }\n                }}\n                className=\"btn btn-danger\"\n                disabled={students.length === 0}\n              >\n                Delete All Students\n              </button>\n            </div>\n            \n            <div className=\"management-section\">\n              <h3>Attendance Management</h3>\n              <button \n                onClick={() => handleClearAttendance(selectedClass)}\n                className=\"btn btn-warning\"\n                disabled={!selectedClass}\n              >\n                Clear Attendance for {selectedClass || 'Current Class'}\n              </button>\n              \n              <button \n                onClick={() => handleClearAttendance()}\n                className=\"btn btn-danger\"\n              >\n                Clear ALL Attendance Records\n              </button>\n            </div>\n          </div>\n        )}\n      </header>\n      \n      <main>\n        {loading ? (\n          <div className=\"loading\">\n            <p>Loading application...</p>\n          </div>\n        ) : !modelsLoaded ? (\n          <div className=\"loading\">\n            <p>Failed to load face detection models. Please check your internet connection and reload the page.</p>\n            <ErrorBoundary>\n              <DebugModels />\n            </ErrorBoundary>\n          </div>\n        ) : activeTab === 'register' ? (\n          <ErrorBoundary>\n            <RegisterTab \n              students={students} \n              setStudents={setStudents} \n              setAttendanceLog={setAttendanceLog}\n              selectedClass={selectedClass}\n              onDeleteStudent={handleDeleteStudent} \n            />\n          </ErrorBoundary>\n        ) : (\n          <ErrorBoundary>\n            <AttendanceTab \n              attendanceLog={attendanceLog}\n              selectedClass={selectedClass} \n            />\n          </ErrorBoundary>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.jsx'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"],"names":["MODEL_URL","loadModels","faceapi.nets","error","detectFaces","videoElement","faceapi.detectAllFaces","faceapi.TinyFaceDetectorOptions","compareFaces","faceDescriptor","registeredStudents","threshold","descriptor","minDistance","matchedStudent","student","studentDescriptor","distance","faceapi.euclideanDistance","drawFaceDetections","canvas","detections","mirrored","ctx","detection","box","initDB","resolve","reject","request","event","db","attendanceStore","loadStudentsFromDB","loadAttendanceFromDB","className","sortedAttendance","a","b","filteredAttendance","log","saveStudentToDB","studentData","hasAttendanceForTodayInClass","studentId","logs","today","logAttendanceToDB","studentName","store","now","logEntry","deleteStudentFromDB","clearAttendanceLogs","clearClassAttendanceLogs","logsToKeep","logCopy","getClassNames","classNames","WebcamCapture","onCapture","onCancel","videoRef","useRef","canvasRef","streamRef","isCameraReady","setIsCameraReady","useState","isFaceDetected","setIsFaceDetected","isCapturing","setIsCapturing","useEffect","stream","track","detectionInterval","faceapi.detectSingleFace","context","textX","textY","handleCapture","captureCanvas","imageData","jsxs","jsx","ErrorBoundary","React","props","errorInfo","StudentRegistrationForm","onRegister","selectedClass","step","setStep","setStudentName","capturedImage","setCapturedImage","setFaceDescriptor","captureData","handleSubmit","e","RegisterTab","students","setStudents","setAttendanceLog","onDeleteStudent","isCameraActive","setIsCameraActive","isRegistering","setIsRegistering","detectedFaces","setDetectedFaces","isProcessing","setIsProcessing","recognizedStudent","setRecognizedStudent","detectionIntervalRef","startCamera","startFaceDetection","stopCamera","video","faces","recognizeFace","detectedFace","match","newLog","prev","handleRegisterStudent","newStudentId","newStudent","Fragment","AttendanceTab","attendanceLog","groupedByDate","sortedDates","date","DebugModels","setLogs","loading","setLoading","addLog","message","testModelLoading","models","model","index","App","activeTab","setActiveTab","modelsLoaded","setModelsLoaded","classes","setClasses","setSelectedClass","showManagement","setShowManagement","modelsSuccess","loadedStudents","loadedAttendance","handleAddClass","newClassName","handleDeleteStudent","s","handleClearAttendance","confirmMessage","cls","newClass","ReactDOM"],"mappings":"+0BAGA,MAAMA,EAAY,yDAGLC,EAAa,SAAY,CACpC,GAAI,CACF,eAAQ,IAAI,oDAAoD,EAEhE,QAAQ,IAAI,qCAAqC,EACjD,MAAMC,EAAa,iBAAiB,YAAYF,CAAS,EACzD,QAAQ,IAAI,iCAAiC,EAE7C,QAAQ,IAAI,gCAAgC,EAC5C,MAAME,EAAa,kBAAkB,YAAYF,CAAS,EAC1D,QAAQ,IAAI,4BAA4B,EAExC,QAAQ,IAAI,mCAAmC,EAC/C,MAAME,EAAa,mBAAmB,YAAYF,CAAS,EAC3D,QAAQ,IAAI,+BAA+B,EAE3C,QAAQ,IAAI,wDAAwD,EAC7D,EACR,OAAQG,EAAO,CACd,eAAQ,MAAM,gDAAiDA,CAAK,EAC7D,EACR,CACH,EAGaC,EAAc,MAAOC,GAAiB,CACjD,GAAI,CAACA,GAAgBA,EAAa,aAAe,EAC/C,MAAO,GAGT,GAAI,CAMF,OALsB,MAAMC,EAC1BD,EACA,IAAIE,CACV,EAAM,kBAAiB,EAAG,qBAGvB,OAAQJ,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,EACR,CACH,EAGaK,EAAe,CAACC,EAAgBC,EAAoBC,EAAY,KAAQ,CACnF,GAAI,CAACF,GAAkBC,EAAmB,SAAW,EACnD,OAAO,KAGT,GAAI,CAEF,MAAME,EAAa,MAAM,QAAQH,CAAc,EAC3C,IAAI,aAAaA,CAAc,EAC/BA,EAEJ,IAAII,EAAc,IACdC,EAAiB,KAErB,UAAWC,KAAWL,EACpB,GAAIK,EAAQ,eAAgB,CAC1B,MAAMC,EAAoB,MAAM,QAAQD,EAAQ,cAAc,EAC1D,IAAI,aAAaA,EAAQ,cAAc,EACvCA,EAAQ,eAENE,EAAWC,EAA0BN,EAAYI,CAAiB,EAEpEC,EAAWJ,GAAeI,EAAWN,IACvCE,EAAcI,EACdH,EAAiBC,EAEpB,CAGH,OAAOD,EAAiB,CAAE,QAASA,EAAgB,SAAUD,CAAa,EAAG,IAC9E,OAAQV,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,IACR,CACH,EAGagB,EAAqB,CAACC,EAAQC,EAAYC,EAAW,KAAS,CACzE,GAAI,CAACF,GAAU,CAACC,GAAcA,EAAW,SAAW,EAClD,OAGF,MAAME,EAAMH,EAAO,WAAW,IAAI,EAGlCG,EAAI,UAAU,EAAG,EAAGH,EAAO,MAAOA,EAAO,MAAM,EAG/CG,EAAI,KAAI,EAGJD,IACFC,EAAI,UAAUH,EAAO,MAAO,CAAC,EAC7BG,EAAI,MAAM,GAAI,CAAC,GAIjBF,EAAW,QAAQG,GAAa,CAC9B,MAAMC,EAAMD,EAAU,UAAU,IAEhCD,EAAI,YAAc,UAClBA,EAAI,UAAY,EAKdA,EAAI,WAAWE,EAAI,EAAGA,EAAI,EAAGA,EAAI,MAAOA,EAAI,MAAM,CAIxD,CAAG,EAGDF,EAAI,QAAO,CACb,ECzHaG,EAAS,IACX,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,MAAMC,EAAU,UAAU,KAAK,sBAAuB,CAAC,EAEvDA,EAAQ,QAAWC,GAAU,CAC3B,QAAQ,MAAM,0BAA2BA,CAAK,EAC9CF,EAAOE,CAAK,CACpB,EAEMD,EAAQ,UAAaC,GAAU,CAC7B,MAAMC,EAAKD,EAAM,OAAO,OACxBH,EAAQI,CAAE,CAClB,EAEMF,EAAQ,gBAAmBC,GAAU,CACnC,MAAMC,EAAKD,EAAM,OAAO,OASxB,GANKC,EAAG,iBAAiB,SAAS,UAAU,GACrBA,EAAG,kBAAkB,WAAY,CAAE,QAAS,KAAM,cAAe,EAAI,CAAE,EAC/E,YAAY,OAAQ,OAAQ,CAAE,OAAQ,EAAK,CAAE,EAIxD,CAACA,EAAG,iBAAiB,SAAS,YAAY,EAAG,CAC/C,MAAMC,EAAkBD,EAAG,kBAAkB,aAAc,CAAE,QAAS,KAAM,cAAe,EAAI,CAAE,EACjGC,EAAgB,YAAY,YAAa,YAAa,CAAE,OAAQ,EAAK,CAAE,EACvEA,EAAgB,YAAY,YAAa,YAAa,CAAE,OAAQ,EAAK,CAAE,EACvEA,EAAgB,YAAY,YAAa,YAAa,CAAE,OAAQ,EAAK,CAAE,CACxE,CACT,CACA,CAAK,EAIUC,EAAqB,SAAY,CAC5C,GAAI,CACF,MAAMF,EAAK,MAAML,IACjB,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CAGtC,MAAMC,EAFcE,EAAG,YAAY,CAAC,UAAU,EAAG,UAAU,EACjC,YAAY,UAAU,EAC1B,SAEtBF,EAAQ,UAAY,IAAM,CACxBF,EAAQE,EAAQ,MAAM,CAChC,EAEQA,EAAQ,QAAW1B,GAAU,CAC3B,QAAQ,MAAM,0BAA2BA,CAAK,EAC9CyB,EAAOzB,CAAK,CACtB,CACA,CAAO,CACF,OAAQA,EAAO,CACd,cAAQ,MAAM,kBAAmBA,CAAK,EAChCA,CACP,CACL,EAGe+B,EAAuB,MAAOC,EAAY,OAAS,CAC9D,GAAI,CACF,MAAMJ,EAAK,MAAML,IACjB,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CAGtC,MAAMC,EAFcE,EAAG,YAAY,CAAC,YAAY,EAAG,UAAU,EACnC,YAAY,YAAY,EAC5B,SAEtBF,EAAQ,UAAY,IAAM,CAExB,MAAMO,EAAmBP,EAAQ,OAAO,KAAK,CAACQ,EAAGC,IAAMA,EAAE,UAAYD,EAAE,SAAS,EAG1EE,EAAqBJ,EACvBC,EAAiB,OAAOI,GAAOA,EAAI,YAAcL,CAAS,EAC1DC,EAEJT,EAAQY,CAAkB,CACpC,EAEQV,EAAQ,QAAW1B,GAAU,CAC3B,QAAQ,MAAM,4BAA6BA,CAAK,EAChDyB,EAAOzB,CAAK,CACtB,CACA,CAAO,CACF,OAAQA,EAAO,CACd,cAAQ,MAAM,kBAAmBA,CAAK,EAChCA,CACP,CACL,EAGesC,EAAkB,MAAOC,GAAgB,CACpD,GAAI,CACF,MAAMX,EAAK,MAAML,IACjB,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CAItC,MAAMC,EAHcE,EAAG,YAAY,CAAC,UAAU,EAAG,WAAW,EAClC,YAAY,UAAU,EAE1B,IAAIW,CAAW,EAErCb,EAAQ,UAAY,IAAM,CACxBF,EAAQE,EAAQ,MAAM,CAChC,EAEQA,EAAQ,QAAW1B,GAAU,CAC3B,QAAQ,MAAM,wBAAyBA,CAAK,EAC5CyB,EAAOzB,CAAK,CACtB,CACA,CAAO,CACF,OAAQA,EAAO,CACd,cAAQ,MAAM,kBAAmBA,CAAK,EAChCA,CACP,CACL,EAGewC,EAA+B,MAAOC,EAAWT,IAAc,CAC1E,GAAI,CACF,MAAMU,EAAO,MAAMX,IACbY,EAAQ,IAAI,KAAM,EAAC,mBAAkB,EAE3C,OAAOD,EAAK,KAAKL,GACfA,EAAI,YAAcI,GAClBJ,EAAI,YAAcL,GAClB,IAAI,KAAKK,EAAI,SAAS,EAAE,mBAAoB,IAAKM,CACzD,CACK,OAAQ3C,EAAO,CACd,eAAQ,MAAM,6BAA8BA,CAAK,EAC1C,EACR,CACL,EAGe4C,EAAoB,MAAOH,EAAWI,EAAab,IAAc,CAC5E,GAAI,CAGF,GAD2B,MAAMQ,EAA6BC,EAAWT,CAAS,EAEhF,eAAQ,IAAI,WAAWa,CAAW,8CAA8Cb,CAAS,EAAE,EACpF,KAGT,MAAMJ,EAAK,MAAML,IACjB,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CAEtC,MAAMqB,EADclB,EAAG,YAAY,CAAC,YAAY,EAAG,WAAW,EACpC,YAAY,YAAY,EAE5CmB,EAAM,IAAI,KACVC,EAAW,CACf,UAAAP,EACA,YAAAI,EACA,UAAAb,EACA,UAAWe,EAAI,QAAS,EACxB,KAAMA,EAAI,mBAAoB,EAC9B,KAAMA,EAAI,mBAAoB,EAC9B,YAAaA,EAAI,aAAc,CACzC,EAEcrB,EAAUoB,EAAM,IAAIE,CAAQ,EAElCtB,EAAQ,UAAY,IAAM,CACxBF,EAAQ,CACN,GAAIE,EAAQ,OACZ,GAAGsB,CACf,CAAW,CACX,EAEQtB,EAAQ,QAAW1B,GAAU,CAC3B,QAAQ,MAAM,4BAA6BA,CAAK,EAChDyB,EAAOzB,CAAK,CACtB,CACA,CAAO,CACF,OAAQA,EAAO,CACd,cAAQ,MAAM,kBAAmBA,CAAK,EAChCA,CACP,CACL,EAGeiD,EAAsB,MAAOR,GAAc,CACtD,GAAI,CACF,MAAMb,EAAK,MAAML,IACjB,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CAItC,MAAMC,EAHcE,EAAG,YAAY,CAAC,UAAU,EAAG,WAAW,EAClC,YAAY,UAAU,EAE1B,OAAOa,CAAS,EAEtCf,EAAQ,UAAY,IAAM,CACxBF,EAAQ,EAAI,CACtB,EAEQE,EAAQ,QAAW1B,GAAU,CAC3B,QAAQ,MAAM,0BAA2BA,CAAK,EAC9CyB,EAAOzB,CAAK,CACtB,CACA,CAAO,CACF,OAAQA,EAAO,CACd,cAAQ,MAAM,kBAAmBA,CAAK,EAChCA,CACP,CACL,EAGekD,EAAsB,SAAY,CAC7C,GAAI,CACF,MAAMtB,EAAK,MAAML,IACjB,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CAItC,MAAMC,EAHcE,EAAG,YAAY,CAAC,YAAY,EAAG,WAAW,EACpC,YAAY,YAAY,EAE5B,QAEtBF,EAAQ,UAAY,IAAM,CACxBF,EAAQ,EAAI,CACtB,EAEQE,EAAQ,QAAW1B,GAAU,CAC3B,QAAQ,MAAM,kCAAmCA,CAAK,EACtDyB,EAAOzB,CAAK,CACtB,CACA,CAAO,CACF,OAAQA,EAAO,CACd,cAAQ,MAAM,kBAAmBA,CAAK,EAChCA,CACP,CACL,EAGemD,EAA2B,MAAOnB,GAAc,CAC3D,GAAI,CACF,MAAMJ,EAAK,MAAML,IAEX6B,GADU,MAAMrB,KACK,OAAOM,GAAOA,EAAI,YAAcL,CAAS,EAGpE,MAAMkB,EAAmB,EAIzB,MAAMJ,EADclB,EAAG,YAAY,CAAC,YAAY,EAAG,WAAW,EACpC,YAAY,YAAY,EAElD,UAAWS,KAAOe,EAAY,CAC5B,MAAMC,EAAU,CAAE,GAAGhB,GACrB,OAAOgB,EAAQ,GACfP,EAAM,IAAIO,CAAO,CAClB,CAED,MAAO,EACR,OAAQrD,EAAO,CACd,cAAQ,MAAM,kBAAmBA,CAAK,EAChCA,CACP,CACL,EAGesD,EAAgB,SAAY,CACvC,GAAI,CACF,MAAMZ,EAAO,MAAMX,IACbwB,EAAa,IAAI,IAEvB,OAAAb,EAAK,QAAQL,GAAO,CACdA,EAAI,WACNkB,EAAW,IAAIlB,EAAI,SAAS,CAEtC,CAAO,EAEM,MAAM,KAAKkB,CAAU,CAC7B,OAAQvD,EAAO,CACd,eAAQ,MAAM,6BAA8BA,CAAK,EAC1C,EACR,CACF,EChRGwD,GAAgB,CAAC,CAAE,UAAAC,EAAW,SAAAC,KAAe,CAC3C,MAAAC,EAAWC,SAAO,IAAI,EACtBC,EAAYD,SAAO,IAAI,EACvBE,EAAYF,SAAO,IAAI,EACvB,CAACG,EAAeC,CAAgB,EAAIC,EAAAA,SAAS,EAAK,EAClD,CAACC,EAAgBC,CAAiB,EAAIF,EAAAA,SAAS,EAAK,EACpD,CAACG,EAAaC,CAAc,EAAIJ,EAAAA,SAAS,EAAK,EAGpDK,EAAAA,UAAU,MACY,SAAY,CAC1B,GAAA,CACF,MAAMC,EAAS,MAAM,UAAU,aAAa,aAAa,CACvD,MAAO,CACL,MAAO,CAAE,MAAO,GAAI,EACpB,OAAQ,CAAE,MAAO,GAAI,EACrB,WAAY,MAAA,CACd,CACD,EAEGZ,EAAS,UACXA,EAAS,QAAQ,UAAYY,EAC7BT,EAAU,QAAUS,EAGXZ,EAAA,QAAQ,iBAAmB,IAAM,CACxCK,EAAiB,EAAI,CACvB,SAEKhE,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9C,MAAM,0EAA0E,CAAA,CAEpF,GAEY,EAGL,IAAM,CACP8D,EAAU,SACZA,EAAU,QAAQ,YAAY,QAAiBU,GAAAA,EAAM,MAAM,CAE/D,GACC,EAAE,EAGLF,EAAAA,UAAU,IAAM,CACd,IAAIG,EAAoB,KAExB,OAAIV,IAEFU,EAAoB,YAAY,SAAY,CACtC,GAAA,CACF,GAAI,CAACd,EAAS,SAAWA,EAAS,QAAQ,aAAe,EAAG,OAEtD,MAAAzC,EAAa,MAAMwD,EACvBf,EAAS,QACT,IAAIvD,CACN,EAKI,GAHc+D,EAAA,CAAC,CAACjD,CAAU,EAG1BA,GAAc2C,EAAU,QAAS,CACnC,MAAM5C,EAAS4C,EAAU,QACnBc,EAAU1D,EAAO,WAAW,IAAI,EAG/BA,EAAA,MAAQ0C,EAAS,QAAQ,WACzB1C,EAAA,OAAS0C,EAAS,QAAQ,YAGjCgB,EAAQ,UAAU,EAAG,EAAG1D,EAAO,MAAOA,EAAO,MAAM,EAG7C,KAAA,CAAE,IAAAK,GAAQJ,EAGhByD,EAAQ,KAAK,EAGLA,EAAA,UAAU1D,EAAO,MAAO,CAAC,EACzB0D,EAAA,MAAM,GAAI,CAAC,EAGnBA,EAAQ,YAAc,UACtBA,EAAQ,UAAY,EACZA,EAAA,WAAWrD,EAAI,EAAGA,EAAI,EAAGA,EAAI,MAAOA,EAAI,MAAM,EAGtDqD,EAAQ,QAAQ,EAGhB,MAAMC,EAAQ3D,EAAO,MAAQK,EAAI,EAAIA,EAAI,MACnCuD,EAAQvD,EAAI,EAGlBqD,EAAQ,UAAY,qBACpBA,EAAQ,SAASC,EAAOC,EAAQ,GAAI,IAAK,EAAE,EAG3CF,EAAQ,UAAY,UACpBA,EAAQ,KAAO,aACfA,EAAQ,SAAS,mBAAoBC,EAAQ,EAAGC,EAAQ,CAAC,CAAA,SAEhDhB,EAAU,QAAS,CAE5B,MAAM5C,EAAS4C,EAAU,QACT5C,EAAO,WAAW,IAAI,EAC9B,UAAU,EAAG,EAAGA,EAAO,MAAOA,EAAO,MAAM,CAAA,QAE9CjB,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,CAAA,GAE7C,GAAG,GAGD,IAAM,CACPyE,iBAAiCA,CAAiB,CACxD,CAAA,EACC,CAACV,CAAa,CAAC,EAGlB,MAAMe,EAAgB,SAAY,CAChC,GAAI,GAACnB,EAAS,SAAW,CAACO,GAEtB,GAAA,CACFG,EAAe,EAAI,EAGb,MAAAnD,EAAa,MAAMwD,EACvBf,EAAS,QACT,IAAIvD,CAAgC,EACpC,kBAAkB,EAAE,mBAAmB,EAEzC,GAAI,CAACc,EAAY,CACf,MAAM,iEAAiE,EACvEmD,EAAe,EAAK,EACpB,MAAA,CAII,MAAAU,EAAgB,SAAS,cAAc,QAAQ,EACvCA,EAAA,MAAQpB,EAAS,QAAQ,WACzBoB,EAAA,OAASpB,EAAS,QAAQ,YAElC,MAAAvC,EAAM2D,EAAc,WAAW,IAAI,EAGrC3D,EAAA,UAAU2D,EAAc,MAAO,CAAC,EAChC3D,EAAA,MAAM,GAAI,CAAC,EACfA,EAAI,UAAUuC,EAAS,QAAS,EAAG,CAAC,EAGpCvC,EAAI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAG3B,MAAA4D,EAAYD,EAAc,UAAU,YAAY,EAG5CtB,EAAA,CACR,UAAAuB,EACA,WAAY,MAAM,KAAK9D,EAAW,UAAU,CAAA,CAC7C,QAEMlB,EAAO,CACN,QAAA,MAAM,wBAAyBA,CAAK,EAC5C,MAAM,yCAAyC,CAAA,QAC/C,CACAqE,EAAe,EAAK,CAAA,CAExB,EAGE,OAAAY,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,IAAKvB,EACL,SAAQ,GACR,YAAW,GACX,MAAK,GACL,MAAO,CAAE,UAAW,YAAa,CAAA,CACnC,EACAuB,EAAA,IAAC,SAAA,CACC,IAAKrB,EACL,MAAO,CACL,SAAU,WACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,MAAA,CACV,CACF,EAEC,CAACE,GACCmB,EAAA,IAAA,MAAA,CAAI,UAAU,kBACb,SAAAA,EAAAA,IAAC,IAAE,CAAA,SAAA,wBAAsB,CAAA,CAC3B,CAAA,CAAA,EAEJ,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAC,MAAC,MAAI,CAAA,UAAU,cACZ,SAAAhB,QACE,OAAK,CAAA,UAAU,gBAAgB,SAAA,iBAAe,CAAA,EAE9CgB,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,6BAAkB,CAAA,EAEhD,EAEAA,EAAA,IAAC,SAAA,CACC,UAAU,cACV,QAASJ,EACT,SAAU,CAACZ,GAAkBE,GAAe,CAACL,EAE5C,WAAc,eAAiB,YAAA,CAClC,EAEAmB,EAAA,IAAC,SAAA,CACC,UAAU,aACV,QAASxB,EACV,SAAA,QAAA,CAAA,CAED,CACF,CAAA,CAAA,EACF,CAEJ,ECpOA,MAAMyB,UAAsBC,EAAM,SAAU,CAC1C,YAAYC,EAAO,CACjB,MAAMA,CAAK,EACX,KAAK,MAAQ,CAAE,SAAU,GAAO,MAAO,KAAM,UAAW,IAAK,CAAA,CAG/D,OAAO,yBAAyBrF,EAAO,CAE9B,MAAA,CAAE,SAAU,EAAK,CAAA,CAG1B,kBAAkBA,EAAOsF,EAAW,CAE1B,QAAA,MAAM,4BAA6BtF,EAAOsF,CAAS,EAC3D,KAAK,SAAS,CAAE,MAAAtF,EAAO,UAAAsF,CAAA,CAAW,CAAA,CAGpC,QAAS,CACH,OAAA,KAAK,MAAM,SAGXL,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EACxBA,EAAAA,IAAC,KAAE,SAAoF,sFAAA,CAAA,EACvFD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACC,EAAAA,IAAA,IAAA,CAAG,cAAK,MAAM,OAAS,KAAK,MAAM,MAAM,SAAW,CAAA,CAAA,SACnD,UACC,CAAA,SAAA,CAAAA,EAAAA,IAAC,WAAQ,SAAe,iBAAA,CAAA,EACxBA,EAAAA,IAAC,KAAG,SAAK,KAAA,MAAM,WAAa,KAAK,MAAM,UAAU,cAAe,CAAA,CAAA,CAClE,CAAA,CAAA,EACF,EACAA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,KAAK,SAAS,CAAE,SAAU,GAAO,MAAO,KAAM,UAAW,KAAM,EAC9E,UAAU,kBACX,SAAA,WAAA,CAAA,CAED,EACF,EAIG,KAAK,MAAM,QAAA,CAEtB,CCzCA,MAAMK,GAA0B,CAAC,CAAE,WAAAC,EAAY,SAAA9B,EAAU,cAAA+B,KAAoB,CAC3E,KAAM,CAACC,EAAMC,CAAO,EAAI1B,EAAAA,SAAS,SAAS,EACpC,CAACpB,EAAa+C,CAAc,EAAI3B,EAAAA,SAAS,EAAE,EAC3C,CAAC4B,EAAeC,CAAgB,EAAI7B,EAAAA,SAAS,IAAI,EACjD,CAAC3D,EAAgByF,CAAiB,EAAI9B,EAAAA,SAAS,IAAI,EAGnDa,EAAiBkB,GAAgB,CACrCF,EAAiBE,EAAY,SAAS,EACtCD,EAAkBC,EAAY,UAAU,EACxCL,EAAQ,SAAS,CACnB,EAGMM,EAAgBC,GAAM,CAGtB,GAFJA,EAAE,eAAe,EAEb,CAACrD,EAAY,OAAQ,CACvB,MAAM,6BAA6B,EACnC,MAAA,CAIS2C,EAAA,CACT,KAAM3C,EACN,UAAWgD,EACX,eAAAvF,EACA,aAAc,IAAI,KAAK,EAAE,YAAY,CAAA,CACtC,CACH,EAGE,OAAA2E,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAoB,sBAAA,CAAA,EAEvBQ,IAAS,UACRR,EAAAA,IAACC,EACC,CAAA,SAAAD,EAAA,IAAC1B,GAAA,CACC,UAAWsB,EACX,SAAApB,CAAA,CAAA,CAEJ,CAAA,EAECuB,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,iBACb,SAAAA,EAAA,IAAC,OAAI,IAAKW,EAAe,IAAI,kBAAA,CAAmB,CAClD,CAAA,EAEAZ,EAAAA,KAAC,OAAK,CAAA,SAAUgB,EACd,SAAA,CAAChB,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,cAAc,SAAa,gBAAA,EAC1CA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,cACH,MAAOrC,EACP,SAAWqD,GAAMN,EAAeM,EAAE,OAAO,KAAK,EAC9C,YAAY,qBACZ,SAAQ,GACR,UAAS,EAAA,CAAA,CACX,EACF,EAEAjB,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACC,EAAA,IAAA,QAAA,CAAM,QAAQ,YAAY,SAAM,SAAA,EACjCA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,YACH,MAAOO,GAAiB,GACxB,SAAQ,EAAA,CAAA,CACV,EACF,EAEAR,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAAAC,MAAC,SAAO,CAAA,KAAK,SAAS,UAAU,eAAe,SAE/C,mBAAA,EAEAA,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,aACV,QAAS,IAAMS,EAAQ,SAAS,EACjC,SAAA,cAAA,CAED,EAEAT,EAAA,IAAC,SAAA,CACC,KAAK,SACL,UAAU,aACV,QAASxB,EACV,SAAA,QAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,CAEJ,EC5FMyC,GAAc,CAAC,CACnB,SAAAC,EACA,YAAAC,EACA,iBAAAC,EACA,cAAAb,EACA,gBAAAc,CACF,IAAM,CACJ,KAAM,CAACC,EAAgBC,CAAiB,EAAIxC,EAAAA,SAAS,EAAK,EACpD,CAACyC,EAAeC,CAAgB,EAAI1C,EAAAA,SAAS,EAAK,EAClD,CAAC2C,EAAeC,CAAgB,EAAI5C,EAAAA,SAAS,CAAA,CAAE,EAC/C,CAAC6C,EAAcC,CAAe,EAAI9C,EAAAA,SAAS,EAAK,EAChD,CAAC+C,EAAmBC,CAAoB,EAAIhD,EAAAA,SAAS,IAAI,EAEzDN,EAAWC,SAAO,IAAI,EACtBC,EAAYD,SAAO,IAAI,EACvBE,EAAYF,SAAO,IAAI,EACvBsD,EAAuBtD,SAAO,IAAI,EAGlCuD,EAAc,SAAY,CAC1B,GAAA,CACF,GAAIrD,EAAU,QAAS,OAEjB,MAAAS,EAAS,MAAM,UAAU,aAAa,aAAa,CAAE,MAAO,GAAM,EACpEZ,EAAS,UACXA,EAAS,QAAQ,UAAYY,EAC7BT,EAAU,QAAUS,EACpBkC,EAAkB,EAAI,EAGHW,EAAA,SAEdpH,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAC9C,MAAM,0EAA0E,CAAA,CAEpF,EAGMqH,EAAa,IAAM,CACnBvD,EAAU,UACGA,EAAU,QAAQ,UAAU,EACpC,QAAQU,GAASA,EAAM,KAAA,CAAM,EACpCV,EAAU,QAAU,MAGlBoD,EAAqB,UACvB,cAAcA,EAAqB,OAAO,EAC1CA,EAAqB,QAAU,MAGjCT,EAAkB,EAAK,EACvBI,EAAiB,CAAA,CAAE,CACrB,EAGMO,EAAqB,IAAM,CAC3BF,EAAqB,UAGJA,EAAA,QAAU,YAAY,SAAY,CACjD,GAAA,GAACvD,EAAS,SAAWA,EAAS,QAAQ,aAAe,GAAK,CAACE,EAAU,SAIrE,GAAA,CACF,MAAMyD,EAAQ3D,EAAS,QACjB1C,EAAS4C,EAAU,QASzB,IANI5C,EAAO,QAAUqG,EAAM,YAAcrG,EAAO,SAAWqG,EAAM,eAC/DrG,EAAO,MAAQqG,EAAM,WACrBrG,EAAO,OAASqG,EAAM,aAIpBZ,EAAe,CAELzF,EAAO,WAAW,IAAI,EAC9B,UAAU,EAAG,EAAGA,EAAO,MAAOA,EAAO,MAAM,EAC/C,MAAA,CAII,MAAAsG,EAAQ,MAAMtH,EAAYqH,CAAK,EACrCT,EAAiBU,CAAK,EAGHvG,EAAAC,EAAQsG,EAAO,GAAMP,CAAiB,EAGrDO,EAAM,OAAS,GAAK,CAACT,GAAgB,CAACJ,GAC1Bc,EAAAD,EAAM,CAAC,CAAC,QAEjBvH,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,CAAA,GAEtD,GAAG,EACR,EAGMwH,EAAgB,MAAOC,GAAiB,CAC5C,GAAI,EAAArB,EAAS,SAAW,GAAK,CAACqB,GAAgBX,GAAgB,CAACrB,GAE/D,CAAAsB,EAAgB,EAAI,EAEhB,GAAA,CAEF,MAAMW,EAAQrH,EAAaoH,EAAa,WAAYrB,CAAQ,EAG5D,GAAIsB,EAMF,GALA,QAAQ,IAAI,sBAAuBA,EAAM,QAAQ,KAAM,iBAAkBA,EAAM,QAAQ,EAG5D,MAAMlF,EAA6BkF,EAAM,QAAQ,GAAIjC,CAAa,EAuBtEwB,EAAA,CACnB,KAAMS,EAAM,QAAQ,KACpB,UAAWjC,EACX,cAAe,EAAA,CAChB,MAzBsB,CAEjB,MAAAkC,EAAS,MAAM/E,EAAkB8E,EAAM,QAAQ,GAAIA,EAAM,QAAQ,KAAMjC,CAAa,EACtFkC,IACFrB,EAAyBsB,GAAA,CAACD,EAAQ,GAAGC,CAAI,CAAC,EAGrBX,EAAA,CACnB,KAAMS,EAAM,QAAQ,KACpB,UAAW,IAAI,KAAK,EAAE,mBAAmB,EACzC,UAAWjC,EACX,cAAe,EAAA,CAChB,EAGD,WAAW,IAAM,CACfwB,EAAqB,IAAI,GACxB,GAAI,EACT,QAUGjH,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,CAAA,QACrD,CACA+G,EAAgB,EAAK,CAAA,EAEzB,EAGMc,EAAwB,MAAOtF,GAAgB,CAC/C,GAAA,CACI,MAAAuF,EAAe,MAAMxF,EAAgBC,CAAW,EAChDwF,EAAa,CAAE,GAAGxF,EAAa,GAAIuF,CAAa,EAItD,GAHAzB,EAAoBuB,GAAA,CAAC,GAAGA,EAAMG,CAAU,CAAC,EAGrCtC,EAAe,CACjB,MAAMkC,EAAS,MAAM/E,EAAkBkF,EAAcvF,EAAY,KAAMkD,CAAa,EAChFkC,GACFrB,EAAyBsB,GAAA,CAACD,EAAQ,GAAGC,CAAI,CAAC,CAC5C,CAIFjB,EAAiB,EAAK,EAEhB,MAAA,YAAYpE,EAAY,IAAI,4BAA4B,QACvDvC,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,EACjD,MAAM,+CAA+C,CAAA,CAEzD,EAGAsE,OAAAA,EAAAA,UAAU,IACD,IAAM,CACA+C,EAAA,CACb,EACC,EAAE,QAGF,MAAI,CAAA,UAAU,eACZ,SAAAX,QACEvB,EACC,CAAA,SAAAD,EAAA,IAACK,GAAA,CACC,WAAYsC,EACZ,SAAU,IAAMlB,EAAiB,EAAK,EACtC,cAAAlB,CAAA,CACF,CAAA,CACF,EAGER,EAAAA,KAAA+C,EAAA,SAAA,CAAA,SAAA,CAAC/C,EAAAA,KAAA,MAAA,CAAI,UAAU,mBACZ,SAAA,CAAC,CAAAQ,SACC,MAAI,CAAA,UAAU,gBACb,SAACP,EAAAA,IAAA,IAAA,CAAE,mEAAuD,CAC5D,CAAA,EAEFD,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAC,EAAA,IAAC,QAAA,CACC,IAAKvB,EACL,SAAQ,GACR,YAAW,GACX,MAAK,GACL,MAAO,CACL,UAAW,aACX,MAAO,OACP,OAAQ,OACR,UAAW,QACX,QAAS6C,EAAiB,QAAU,MAAA,CACtC,CACF,EACAtB,EAAA,IAAC,SAAA,CACC,IAAKrB,EACL,MAAO,CACL,SAAU,WACV,IAAK,EACL,KAAM,EACN,MAAO,OACP,OAAQ,OACR,cAAe,OACf,QAAS2C,EAAiB,QAAU,MAAA,CACtC,CACF,EAEC,CAACA,GACCvB,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAoB,sBAAA,CAAA,EACvBA,EAAAA,IAAC,KAAE,SAA6B,+BAAA,CAAA,CAAA,CAClC,CAAA,CAAA,EAEJ,EAEC8B,GAAqBA,EAAkB,eACrC/B,EAAA,KAAA,MAAA,CAAI,UAAU,oBAAoB,MAAO,CAAE,gBAAiB,yBAAA,EAC3D,SAAA,CAAAA,OAAC,IAAE,CAAA,SAAA,CAAA,4BAAyBC,EAAAA,IAAC,SAAQ,CAAA,SAAA8B,EAAkB,IAAK,CAAA,CAAA,EAAS,SACpE,IAAE,CAAA,SAAA,CAAA,UAAQA,EAAkB,SAAA,EAAU,SACtC,IAAE,CAAA,SAAA,CAAA,SAAOA,EAAkB,SAAA,CAAU,CAAA,CAAA,EACxC,EAGD9B,MAAA,MAAA,CAAI,UAAU,kBACZ,WAEGD,EAAA,KAAA+C,WAAA,CAAA,SAAA,CAAA9C,MAAC,SAAO,CAAA,QAASmC,EAAY,UAAU,iBAAiB,SAExD,cAAA,EAEAnC,EAAA,IAAC,SAAA,CACC,QAAS,IAAMyB,EAAiB,EAAI,EACpC,UAAU,kBACV,SAAU,CAAClB,EACZ,SAAA,sBAAA,CAAA,CAGH,CAAA,CAAA,QAEC,SAAO,CAAA,QAAS0B,EAAa,UAAU,kBAAkB,uBAE1D,CAAA,CAEJ,CAAA,CAAA,EACF,EAEAlC,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAA,OAAC,KAAG,CAAA,SAAA,CAAA,wBAAsBmB,EAAS,OAAO,GAAA,EAAC,EAE1CA,EAAS,SAAW,EAClBlB,EAAAA,IAAA,IAAA,CAAE,sCAA2B,CAAA,EAE9BA,EAAA,IAAC,MAAI,CAAA,UAAU,gBACZ,SAASkB,EAAA,OACPnB,EAAA,KAAA,MAAA,CAAqB,UAAU,eAC9B,SAAA,CAAAC,MAAC,OAAI,IAAKtE,EAAQ,UAAW,IAAKA,EAAQ,KAAM,EAChDsE,EAAAA,IAAC,KAAI,CAAA,SAAAtE,EAAQ,IAAK,CAAA,SACjB,IAAE,CAAA,SAAA,CAAA,OAAKA,EAAQ,EAAA,EAAG,SAClB,IAAE,CAAA,SAAA,CAAA,eAAa,IAAI,KAAKA,EAAQ,YAAY,EAAE,mBAAmB,CAAA,EAAE,EACpEsE,EAAA,IAAC,SAAA,CACC,QAAS,IAAMqB,EAAgB3F,EAAQ,EAAE,EACzC,UAAU,aACV,MAAM,iBACP,SAAA,GAAA,CAAA,CAED,GAXQA,EAAQ,EAYlB,CACD,CACH,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAEJ,ECjTMqH,GAAgB,CAAC,CAAE,cAAAC,EAAe,cAAAzC,KAAoB,CAE1D,MAAM0C,EAAgB,CAAC,EACvBD,EAAc,QAAe7F,GAAA,CACtB8F,EAAc9F,EAAI,IAAI,IACX8F,EAAA9F,EAAI,IAAI,EAAI,CAAC,GAE7B8F,EAAc9F,EAAI,IAAI,EAAE,KAAKA,CAAG,CAAA,CACjC,EAGD,MAAM+F,EAAc,OAAO,KAAKD,CAAa,EAAE,KAAK,CAACjG,EAAGC,IACtD,IAAI,KAAKA,CAAC,EAAI,IAAI,KAAKD,CAAC,CAC1B,EAGE,OAAA+C,EAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,OAAC,KACC,CAAA,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,UAAU,iBAAiB,MAAO,CAAE,cAAe,SAAU,YAAa,MAAO,EAAG,SAE1F,YAAA,CAAA,EACCO,EAAgB,mBAAmBA,CAAa,GAAK,qBAAA,EACxD,EAECyC,EAAc,SAAW,EACvBjD,EAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAC,EAAA,IAAC,OAAK,CAAA,UAAU,iBAAiB,MAAO,CAAE,SAAU,OAAQ,aAAc,OAAQ,QAAS,EAAI,EAAG,SAElG,aAAA,SACC,IAAE,CAAA,SAAA,CAAA,yBAAuBO,EAAgB,OAAOA,CAAa,GAAK,GAAG,OAAA,EAAK,EAC3EP,EAAAA,IAAC,KAAE,SAAyD,2DAAA,CAAA,CAAA,CAC9D,CAAA,EAECA,EAAAA,IAAA,MAAA,CAAI,UAAU,qBACZ,SAAYkD,EAAA,IACXC,GAAApD,OAAC,MAAe,CAAA,UAAU,iBACxB,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,cACZ,SAAA,CAACC,EAAAA,IAAA,OAAA,CAAK,UAAU,iBAAiB,MAAO,CAAE,cAAe,SAAU,YAAa,MAAO,EAAG,SAE1F,gBAAA,CAAA,EACCmD,EACDpD,EAAAA,KAAC,OAAK,CAAA,UAAU,mBAAoB,SAAA,CAAAkD,EAAcE,CAAI,EAAE,OAAO,WAAA,CAAS,CAAA,CAAA,EAC1E,QACC,MAAI,CAAA,UAAU,kBACb,SAACpD,EAAA,KAAA,QAAA,CAAM,UAAU,mBACf,SAAA,CAACC,EAAA,IAAA,QAAA,CACC,gBAAC,KACC,CAAA,SAAA,CAAAD,OAAC,KACC,CAAA,SAAA,CAAAC,EAAA,IAAC,OAAK,CAAA,UAAU,iBAAiB,MAAO,CAAE,SAAU,OAAQ,cAAe,SAAU,YAAa,KAAM,EAAG,SAE3G,SAAA,EAAO,SAAA,EAET,SACC,KACC,CAAA,SAAA,CAAAA,EAAA,IAAC,OAAK,CAAA,UAAU,iBAAiB,MAAO,CAAE,SAAU,OAAQ,cAAe,SAAU,YAAa,KAAM,EAAG,SAE3G,SAAA,EAAO,OAAA,EAET,SACC,KACC,CAAA,SAAA,CAAAA,EAAA,IAAC,OAAK,CAAA,UAAU,iBAAiB,MAAO,CAAE,SAAU,OAAQ,cAAe,SAAU,YAAa,KAAM,EAAG,SAE3G,WAAA,EAAO,MAAA,CAET,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EACAA,EAAAA,IAAC,SACE,SAAciD,EAAAE,CAAI,EAAE,IAAIhG,UACtB,KACC,CAAA,SAAA,CAAC6C,EAAAA,IAAA,KAAA,CAAI,WAAI,WAAY,CAAA,EACpBA,EAAA,IAAA,KAAA,CAAI,SAAI7C,EAAA,WAAa,MAAM,EAC5B6C,EAAAA,IAAC,KAAI,CAAA,SAAA7C,EAAI,IAAK,CAAA,CAAA,GAHPA,EAAI,EAIb,CACD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CA1CQ,EAAAgG,CA2CV,CACD,CACH,CAAA,CAAA,EAEJ,CAEJ,ECnFMC,GAAc,IAAM,CACxB,KAAM,CAAC5F,EAAM6F,CAAO,EAAItE,EAAAA,SAAS,CAAA,CAAE,EAC7B,CAACuE,EAASC,CAAU,EAAIxE,EAAAA,SAAS,EAAK,EAEtCyE,EAAUC,GAAY,CAC1BJ,EAAgBX,GAAA,CAAC,GAAGA,EAAM,GAAG,IAAI,KAAK,EAAE,mBAAoB,CAAA,KAAKe,CAAO,EAAE,CAAC,CAC7E,EAEMC,EAAmB,SAAY,CACnCH,EAAW,EAAI,EACfF,EAAQ,CAAA,CAAE,EAEN,GAAA,CAEFG,EAAO,aAAa,OAAO,SAAS,MAAM,EAAE,EAC5CA,EAAO,yBAAyB,EAGhC,MAAM7I,EAAY,yDACX6I,EAAA,kBAAkB7I,CAAS,EAAE,EAGpC,MAAMgJ,EAAS,CACb,CAAE,KAAM,qBAAsB,OAAQ9I,EAAa,gBAAiB,EACpE,CAAE,KAAM,mBAAoB,OAAQA,EAAa,iBAAkB,EACnE,CAAE,KAAM,mBAAoB,OAAQA,EAAa,kBAAmB,CACtE,EAEA,UAAW+I,KAASD,EACd,GAAA,CACKH,EAAA,WAAWI,EAAM,IAAI,KAAK,EAC3B,MAAAA,EAAM,OAAO,YAAYjJ,CAAS,EACjC6I,EAAA,KAAKI,EAAM,IAAI,sBAAsB,QACrC9I,EAAO,CACd0I,EAAO,oBAAoBI,EAAM,IAAI,KAAK9I,EAAM,OAAO,EAAE,CAAA,CAI7D0I,EAAO,uBAAuB,QACvB1I,EAAO,CACP0I,EAAA,yBAAyB1I,EAAM,OAAO,EAAE,CAAA,QAC/C,CACAyI,EAAW,EAAK,CAAA,CAEpB,EAEA,OACGxD,EAAA,KAAA,MAAA,CAAI,UAAU,kBAAkB,MAAO,CAAE,SAAU,QAAS,OAAQ,SAAU,QAAS,MAAA,EACtF,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAE5BA,EAAA,IAAC,SAAA,CACC,QAAS0D,EACT,SAAUJ,EACV,MAAO,CACL,QAAS,YACT,gBAAiB,UACjB,MAAO,QACP,OAAQ,OACR,aAAc,MACd,OAAQA,EAAU,cAAgB,UAClC,aAAc,MAChB,EAEC,WAAU,aAAe,oBAAA,CAC5B,EAEAtD,MAAC,OAAI,MAAO,CACV,gBAAiB,UACjB,QAAS,OACT,aAAc,MACd,UAAW,QACX,UAAW,OACX,WAAY,YACZ,SAAU,OACV,WAAY,KACd,EACG,SAAKxC,EAAA,OAAS,EACbA,EAAK,IAAI,CAACL,EAAK0G,IACZ7D,EAAAA,IAAA,MAAA,CAAgB,MAAO,CACtB,aAAc,MACd,MAAO7C,EAAI,SAAS,GAAG,EAAI,UAAYA,EAAI,SAAS,GAAG,EAAI,UAAY,MAAA,EAEtE,SAAAA,GAJO0G,CAKV,CACD,EAEA7D,EAAAA,IAAA,MAAA,CAAI,MAAO,CAAE,MAAO,OAAQ,UAAW,QAAS,EAAG,yDAEpD,CAEJ,CAAA,CAAA,EACF,CAEJ,EC/EA,SAAS8D,IAAM,CACb,KAAM,CAACC,EAAWC,CAAY,EAAIjF,EAAAA,SAAS,UAAU,EAC/C,CAACkF,EAAcC,CAAe,EAAInF,EAAAA,SAAS,EAAK,EAChD,CAACmC,EAAUC,CAAW,EAAIpC,EAAAA,SAAS,CAAA,CAAE,EACrC,CAACiE,EAAe5B,CAAgB,EAAIrC,EAAAA,SAAS,CAAA,CAAE,EAC/C,CAACuE,EAASC,CAAU,EAAIxE,EAAAA,SAAS,EAAI,EACrC,CAACoF,EAASC,CAAU,EAAIrF,EAAAA,SAAS,CAAA,CAAE,EACnC,CAACwB,EAAe8D,CAAgB,EAAItF,EAAAA,SAAS,EAAE,EAC/C,CAACuF,EAAgBC,CAAiB,EAAIxF,EAAAA,SAAS,EAAK,EAG1DK,EAAAA,UAAU,IAAM,EACK,SAAY,CACzB,GAAA,CACFmE,EAAW,EAAI,EAGT,MAAAiB,EAAgB,MAAM5J,EAAW,EACvCsJ,EAAgBM,CAAa,EAGvB,MAAAC,EAAiB,MAAM7H,EAAmB,EACpCuE,EAAAsD,GAAkB,EAAE,EAG1B,MAAAC,EAAmB,MAAM7H,EAAqB,EACnCuE,EAAAsD,GAAoB,EAAE,EAGjC,MAAArG,EAAa,MAAMD,EAAc,EAC5BgG,EAAA/F,GAAc,EAAE,EAGvBA,EAAW,OAAS,GACLgG,EAAAhG,EAAW,CAAC,CAAC,QAEzBvD,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,CAAA,QAC9C,CACAyI,EAAW,EAAK,CAAA,CAEpB,GAEW,CACb,EAAG,EAAE,EAGLnE,EAAAA,UAAU,IAAM,CACV2E,IAAc,cACKlH,EAAA0D,CAAa,EAAE,KAAK/C,GAAQ4D,EAAiB5D,GAAQ,CAAA,CAAE,CAAC,CAC/E,EACC,CAACuG,EAAWxD,CAAa,CAAC,EAGvB,MAAAoE,EAAkBC,GAAiB,CACnCA,GAAgB,CAACT,EAAQ,SAASS,CAAY,IAChDR,EAAW,CAAC,GAAGD,EAASS,CAAY,CAAC,EACrCP,EAAiBO,CAAY,EAEjC,EAGMC,EAAsB,MAAOtH,GAAc,CAC3C,GAAA,OAAO,QAAQ,+CAA+C,EAC5D,GAAA,CACF,MAAMQ,EAAoBR,CAAS,EACnC4D,EAAYD,EAAS,OAAO4D,GAAKA,EAAE,KAAOvH,CAAS,CAAC,QAC7CzC,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,CAAA,CAGpD,EAGMiK,EAAwB,MAAOjI,EAAY,OAAS,CACxD,MAAMkI,EAAiBlI,EACnB,6DAA6DA,CAAS,IACtE,yDAEA,GAAA,OAAO,QAAQkI,CAAc,EAC3B,GAAA,CACElI,EACF,MAAMmB,EAAyBnB,CAAS,EAExC,MAAMkB,EAAoB,EAE5BoD,EAAiB,CAAA,CAAE,QACZtG,EAAO,CACN,QAAA,MAAM,kCAAmCA,CAAK,CAAA,CAG5D,EAGE,OAAAiF,EAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAAAA,OAAC,SACC,CAAA,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAyB,2BAAA,CAAA,EAE7BD,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAAAA,EAAA,KAAC,SAAA,CACC,MAAOQ,EACP,SAAWS,GAAMqD,EAAiBrD,EAAE,OAAO,KAAK,EAChD,SAAUmD,EAAQ,SAAW,EAE5B,SAAA,CAAAA,EAAQ,SAAW,GAClBnE,MAAC,SAAO,CAAA,MAAM,GAAG,SAAoB,uBAAA,EAEtCmE,EAAQ,IACPc,GAAAjF,EAAA,IAAC,UAAiB,MAAOiF,EAAM,SAAlBA,CAAA,EAAAA,CAAsB,CACpC,CAAA,CAAA,CACH,EAEAjF,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACP,MAAAkF,EAAW,OAAO,uBAAuB,EAC3CA,KAAyBA,CAAQ,CACvC,EACA,UAAU,aACX,SAAA,WAAA,CAAA,CAED,EACF,EAEAnF,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAC,EAAA,IAAC,SAAA,CACC,UAAW+D,IAAc,WAAa,SAAW,GACjD,QAAS,IAAMC,EAAa,UAAU,EACvC,SAAA,qBAAA,CAED,EACAhE,EAAA,IAAC,SAAA,CACC,UAAW+D,IAAc,aAAe,SAAW,GACnD,QAAS,IAAMC,EAAa,YAAY,EACzC,SAAA,gBAAA,CAED,EACAhE,EAAA,IAAC,SAAA,CACC,UAAWsE,EAAiB,SAAW,GACvC,QAAS,IAAMC,EAAkB,CAACD,CAAc,EACjD,SAAA,aAAA,CAAA,CAED,EACF,EAECA,GACCvE,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAkB,oBAAA,CAAA,EACtBA,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACT,OAAO,QAAQ,+CAA+C,IAChEkB,EAAS,QAAQ4D,GAAK/G,EAAoB+G,EAAE,EAAE,CAAC,EAC/C3D,EAAY,CAAA,CAAE,EAElB,EACA,UAAU,iBACV,SAAUD,EAAS,SAAW,EAC/B,SAAA,qBAAA,CAAA,CAED,EACF,EAEAnB,EAAAA,KAAC,MAAI,CAAA,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAqB,uBAAA,CAAA,EACzBD,EAAA,KAAC,SAAA,CACC,QAAS,IAAMgF,EAAsBxE,CAAa,EAClD,UAAU,kBACV,SAAU,CAACA,EACZ,SAAA,CAAA,wBACuBA,GAAiB,eAAA,CAAA,CACzC,EAEAP,EAAA,IAAC,SAAA,CACC,QAAS,IAAM+E,EAAsB,EACrC,UAAU,iBACX,SAAA,8BAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,QAEC,OACE,CAAA,SAAAzB,EACEtD,EAAAA,IAAA,MAAA,CAAI,UAAU,UACb,SAAAA,EAAAA,IAAC,IAAE,CAAA,SAAA,wBAAA,CAAsB,CAC3B,CAAA,EACGiE,EAODF,IAAc,WAChB/D,EAAA,IAACC,EACC,CAAA,SAAAD,EAAA,IAACiB,GAAA,CACC,SAAAC,EACA,YAAAC,EACA,iBAAAC,EACA,cAAAb,EACA,gBAAiBsE,CAAA,CACnB,CAAA,CACF,EAEA7E,EAAA,IAACC,EACC,CAAA,SAAAD,EAAA,IAAC+C,GAAA,CACC,cAAAC,EACA,cAAAzC,CAAA,GAEJ,EAtBCR,EAAA,KAAA,MAAA,CAAI,UAAU,UACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAgG,kGAAA,CAAA,EAClGA,EAAA,IAAAC,EAAA,CACC,SAACD,EAAAA,IAAAoD,GAAA,CAAA,CAAY,CACf,CAAA,CAAA,CACF,CAAA,CAmBJ,CAAA,CAAA,EACF,CAEJ,CCpOA+B,EAAS,WAAW,SAAS,eAAe,MAAM,CAAC,EAAE,aAClDjF,EAAM,WAAN,CACC,SAAAF,MAAC8D,KAAI,CACP,CAAA,CACF"}